// <auto-generated />
using System;
using ChatService.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatService.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ChatService.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsRead")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ReceiverId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SenderId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("ChatService.Entities.MessageAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MessageId")
                        .HasColumnType("int");

                    b.Property<Guid?>("MessageId1")
                        .HasColumnType("char(36)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MessageId1");

                    b.ToTable("MessageAttachments");
                });

            modelBuilder.Entity("ChatService.Entities.MessageEmoji", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Emoji")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MessageId")
                        .HasColumnType("int");

                    b.Property<Guid?>("MessageId1")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("MessageId1");

                    b.ToTable("MessageEmojis");
                });

            modelBuilder.Entity("ChatService.Entities.MessageAttachment", b =>
                {
                    b.HasOne("ChatService.Entities.Message", null)
                        .WithMany("Attachments")
                        .HasForeignKey("MessageId1");
                });

            modelBuilder.Entity("ChatService.Entities.MessageEmoji", b =>
                {
                    b.HasOne("ChatService.Entities.Message", null)
                        .WithMany("Emojis")
                        .HasForeignKey("MessageId1");
                });

            modelBuilder.Entity("ChatService.Entities.Message", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Emojis");
                });
#pragma warning restore 612, 618
        }
    }
}
