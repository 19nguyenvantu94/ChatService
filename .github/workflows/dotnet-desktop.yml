name: Build Code

on:

  pull_request:
    branches: [ "main" ]
    types: [ opened, synchronize, reopened ]

jobs:
  build-test-sonar:
    runs-on: windows-latest

    env:
      DOTNET_VERSION: 8.0.x

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-dotnet-${{ env.DOTNET_VERSION }}-nuget
          restore-keys: |
            ${{ runner.os }}-dotnet-${{ env.DOTNET_VERSION }}-

      - name: Cache .NET Aspire Workload
        uses: actions/cache@v3
        with:
          path: ~/.dotnet/workloads
          key: ${{ runner.os }}-dotnet-${{ env.DOTNET_VERSION }}-aspire
          restore-keys: |
            ${{ runner.os }}-dotnet-${{ env.DOTNET_VERSION }}-aspire

      - name: Install .NET Aspire Workload
        run: dotnet workload install aspire

      - name: Restore dependencies
        run: dotnet restore ChatService/ChatService.sln

      - name: Build Solution
        run: dotnet build ChatService/ChatService.sln --no-restore --configuration Release

      - name: Run Unit Tests
        run: dotnet test ChatService/ChatService.sln --no-build --configuration Release --logger trx --results-directory "TestResults"

      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory -Force
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Build and analyze with SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin `
            /k:"19nguyenvantu94_ChatService" `
            /o:"19nguyenvantu94" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io"

          dotnet build ChatService/ChatService.sln

          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
